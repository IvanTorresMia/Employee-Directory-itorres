{"version":3,"sources":["Components/Hero/index.js","Components/SearchCon/index.js","Components/TableRow/index.js","utils/EmployeeContext.js","Components/TableHeader/index.js","pages/Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbo","className","Search","props","type","name","value","nameInput","onChange","handleInputChange","placeholder","onClick","handleSort","unSort","TableRow","email","phone","age","image","src","EmployeeContext","React","createContext","TableHeader","employees","useContext","console","log","useEffect","map","employee","i","picture","thumbnail","first","last","dob","Gallery","useState","Employees","employeesState","setEmployeesState","inputState","setInputState","Hero","Provider","event","target","filtered","filter","toLowerCase","includes","preventDefault","sorted","sort","a","b","arr","length","j","Math","floor","random","temp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47204fe6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbo() {\n  return (\n    <div className=\"hero\">\n      <h1>Employee Directory!</h1>\n      <p>Keep track of your employees</p>\n    </div>\n  );\n}\n\nexport default Jumbo;\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <div className=\"searchCon\">\n      <div className=\"row\">\n        {\" \"}\n        <input\n          type=\"title\"\n          name=\"nameInput\"\n          value={props.nameInput}\n          onChange={props.handleInputChange}\n          className=\"inputField\"\n          placeholder=\"Search Employees\"\n        />\n      </div>\n\n      <div className=\"row\">\n        {\" \"}\n        <button className=\"rounded btn\" onClick={props.handleSort}>\n          Sort By Name\n        </button>\n        {\" \"}\n        <button className=\"rounded btn\" onClick={props.unSort}>\n          un-sort\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nfunction TableRow(props) {\n  const { name, email, phone, age, image } = props;\n  return (\n    <tbody className=\"tableRow\">\n      <tr>\n        <th>\n          <img src={image} />\n        </th>\n        <td>{name}</td>\n        <td>{email}</td>\n        <td>{phone}</td>\n        <td>{age}</td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default TableRow;\n","import React from \"react\";\n\nconst EmployeeContext = React.createContext([]);\n\nexport default EmployeeContext;","import React, { useEffect, useContext } from \"react\";\nimport TableRow from \"../TableRow\";\nimport EmployeeContext from \"../../utils/EmployeeContext\";\n\nfunction TableHeader(props) {\n  const employees = useContext(EmployeeContext);\n  console.log(employees);\n\n  useEffect(() => {\n    console.log(\"im rendering\");\n  }, [employees]);\n\n  return (\n    <table className=\"table\">\n      <tr className=\"tableHead\">\n        <th>Photo</th>\n        <th>Name </th>\n        <th>Email</th>\n        <th>Phone</th>\n        <th>Age</th>\n      </tr>\n      {employees.map((employee, i) => (\n        <TableRow\n          key={i}\n          image={employee.picture.thumbnail}\n          name={`${employee.name.first} ${employee.name.last}`}\n          email={employee.email}\n          phone={employee.phone}\n          age={employee.dob.age}\n        />\n      ))}\n    </table>\n  );\n}\n\nexport default TableHeader;\n\n// <span className=\"btn\" onClick={props.handleSort}>sort</span>\n","import React, { useState } from \"react\";\nimport Employees from \"../Employees.json\";\nimport Hero from \"../Components/Hero\";\nimport Search from \"../Components/SearchCon\";\nimport TableHeader from \"../Components/TableHeader\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\n\nfunction Gallery() {\n  const [employeesState, setEmployeesState] = useState(Employees);\n  const [inputState, setInputState] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    const filtered = Employees.filter(\n      (employee) =>\n        employee.name.first.toLowerCase().includes(value.toLowerCase()) ||\n        employee.name.last.toLowerCase().includes(value.toLowerCase())\n    );\n    setInputState(value);\n    setEmployeesState(filtered);\n    // console.log(\"sorter: \" + JSON.stringify(employeesState))\n  };\n\n  function handleSort(event) {\n    event.preventDefault();\n\n    const sorted = employeesState.sort((a, b) =>\n      a.name.first > b.name.first ? 1 : -1\n    );\n    setEmployeesState([...sorted]);\n    console.log(sorted);\n  }\n\n  function unSort(event) {\n    event.preventDefault();\n\n    const arr = employeesState;\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * arr.length);\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n    setEmployeesState([...arr]);\n  }\n\n  return (\n    <>\n      <Hero />\n\n      <EmployeeContext.Provider value={employeesState}>\n        <Search\n          nameInput={inputState}\n          handleInputChange={handleInputChange}\n          handleSort={handleSort}\n          unSort={unSort}\n        />\n        <TableHeader />\n      </EmployeeContext.Provider>\n    </>\n  );\n}\n\nexport default Gallery;\n","import './App.css';\nimport Gallery from \"./pages/Gallery\";\n\nfunction App() {\n  return (\n    <>\n     <Gallery />\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}